repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name "Cyclops Repo"
        url "https://dl.bintray.com/cyclopsmc/dev/"
    }
    maven {
        name = "Dankhax"
        url = "http://maven.epoxide.org"
    }
}
dependencies {
    // Add something like 'integrateddynamics_version_local=0.1.0-DEV' to your gradle.properties if you want to use a custom local Integrated Dynamics version.
    if(project.hasProperty("integrateddynamics_version_local")) {
        compile "org.cyclops.integrateddynamics:IntegratedDynamics:${project.integrateddynamics_version_local}:deobf"
    } else {
        compile "org.cyclops.integrateddynamics:IntegratedDynamics:${config.integrateddynamics_version}:deobf"
    }
    // Add something like 'cyclopscore_version_local=0.1.0-DEV' to your gradle.properties if you want to use a custom local CyclopsCore version.
    if(project.hasProperty("cyclopscore_version_local")) {
        compile "org.cyclops.cyclopscore:CyclopsCore:${config.minecraft_version}-${project.cyclopscore_version_local}:deobf"
    } else {
        compile "org.cyclops.cyclopscore:CyclopsCore:${config.minecraft_version}-${config.cyclopscore_version}:deobf"
    }

    if(project.hasProperty("commoncapabilities_version_local")) {
        compile "org.cyclops.commoncapabilities:CommonCapabilities:${project.commoncapabilities_version_local}:deobf"
    } else {
        deobfCompile("org.cyclops.commoncapabilities:CommonCapabilities:${config.commoncapabilities_version}") { // https://dl.bintray.com/cyclopsmc/dev/org/cyclops/commoncapabilities/CommonCapabilities/
            exclude group: 'org.cyclops.cyclopscore', module: 'CyclopsCore'
        }
    }
    deobfCompile "net.darkhax.tesla:Tesla-${config.teslaapi_version}" // http://maven.epoxide.org/net/darkhax/tesla/Tesla/

    // Project lombok
    compile "org.projectlombok:lombok:1.14.4"
}


minecraft {
    version = "${config.minecraft_version}-${config.forge_version}"
    runDir = "run"
    
    replaceIn "Reference.java"
    replace "@VERSION@", project.version
    replace "@MC_VERSION@", project.config.minecraft_version
    replace "@FORGE_VERSION@", project.config.forge_version
    replace "@BUILD_NUMBER@", project.buildnumber
    replace "@CYCLOPSCORE_VERSION@", project.config.cyclopscore_version
    replace "@FINGERPRINT@", project.config.fingerprint

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "${config.mcp_mappings_version}"
}

if (project.buildnumber.equals("RELEASE"))
    version = "${config.minecraft_version}-${config.mod_version}"
else
    version = "${config.minecraft_version}-${config.mod_version}-${buildnumber}"

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, that is not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
